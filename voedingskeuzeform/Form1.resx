<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAuAAAAQGCAIAAAD5cZj7AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAEz1JREFUeF7t3WFCs7oSANC7LhfkelyNm+li3gOklYGESSp8Kp7z616lyWSSTtLW
        8v0HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/Aqvb7f/3b2/
        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
        IcBplKthjnOUHMEWOuMs3vRindfO2Zr802yfoiWGrjgXaRwPAfNPaxZHj2T//uLTbVks0lEMXS37aVnb
        X1sJwNUsa07r9gj8OW3v1AThRKO8AH0cUIBc18dOsyfONAB3DihA7plKEd5B8aetQB8HFCAXDhtNpWL5
        lzSqC9DNAQVoEI4b6Z/jrv5E1vsnQDcHFKBFPKF8GL9hM37F5q5wW7WR4wnQzwGFP6K0v37BX9xzV7dB
        aePWJcBzHFD4G57aXHf80WfLdCeVOQWp9M6IAHU/4T5X8A94B+VA0y3ftjdVG4w/m+79ppgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAPDt/vvv/1KSDpDeoEH9AAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="programBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>